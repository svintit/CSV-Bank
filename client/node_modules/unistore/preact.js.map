{"version":3,"file":"preact.js","sources":["src/util.js","src/integrations/preact.js"],"sourcesContent":["// Bind an object/factory of actions to the store and wrap them.\nexport function mapActions(actions, store) {\n\tif (typeof actions==='function') actions = actions(store);\n\tlet mapped = {};\n\tfor (let i in actions) {\n\t\tmapped[i] = store.action(actions[i]);\n\t}\n\treturn mapped;\n}\n\n\n// select('foo,bar') creates a function of the form: ({ foo, bar }) => ({ foo, bar })\nexport function select(properties) {\n\tif (typeof properties==='string') properties = properties.split(/\\s*,\\s*/);\n\treturn state => {\n\t\tlet selected = {};\n\t\tfor (let i=0; i<properties.length; i++) {\n\t\t\tselected[properties[i]] = state[properties[i]];\n\t\t}\n\t\treturn selected;\n\t};\n}\n\n\n// Lighter Object.assign stand-in\nexport function assign(obj, props) {\n\tfor (let i in props) obj[i] = props[i];\n\treturn obj;\n}\n","import { h, Component } from 'preact';\nimport { assign, mapActions, select } from '../util';\n\n/**\n * Wire a component up to the store. Passes state as props, re-renders on change.\n * @param {Function|Array|String} mapStateToProps  A function mapping of store state to prop values, or an array/CSV of properties to map.\n * @param {Function|Object} [actions] \t\t\t\tAction functions (pure state mappings), or a factory returning them. Every action function gets current state as the first parameter and any other params next\n * @returns {Component} ConnectedComponent\n * @example\n * const Foo = connect('foo,bar')( ({ foo, bar }) => <div /> )\n * @example\n * const actions = { someAction }\n * const Foo = connect('foo,bar', actions)( ({ foo, bar, someAction }) => <div /> )\n * @example\n * @connect( state => ({ foo: state.foo, bar: state.bar }) )\n * export class Foo { render({ foo, bar }) { } }\n */\nexport function connect(mapStateToProps, actions) {\n\tif (typeof mapStateToProps!='function') {\n\t\tmapStateToProps = select(mapStateToProps || {});\n\t}\n\treturn Child => {\n\t\tfunction Wrapper(props, context) {\n\t\t\tconst store = context.store;\n\t\t\tlet state = mapStateToProps(store ? store.getState() : {}, props);\n\t\t\tconst boundActions = actions ? mapActions(actions, store) : { store };\n\t\t\tlet update = () => {\n\t\t\t\tlet mapped = mapStateToProps(store ? store.getState() : {}, props);\n\t\t\t\tfor (let i in mapped) if (mapped[i]!==state[i]) {\n\t\t\t\t\tstate = mapped;\n\t\t\t\t\treturn this.setState({});\n\t\t\t\t}\n\t\t\t\tfor (let i in state) if (!(i in mapped)) {\n\t\t\t\t\tstate = mapped;\n\t\t\t\t\treturn this.setState({});\n\t\t\t\t}\n\t\t\t};\n\t\t\tthis.componentWillReceiveProps = p => {\n\t\t\t\tprops = p;\n\t\t\t\tupdate();\n\t\t\t};\n\t\t\tthis.componentDidMount = () => {\n\t\t\t\tstore.subscribe(update);\n\t\t\t};\n\t\t\tthis.componentWillUnmount = () => {\n\t\t\t\tstore.unsubscribe(update);\n\t\t\t};\n\t\t\tthis.render = props => h(Child, assign(assign(assign({}, boundActions), props), state));\n\t\t}\n\t\treturn (Wrapper.prototype = new Component()).constructor = Wrapper;\n\t};\n}\n\n\n/**\n * Provider exposes a store (passed as `props.store`) into context.\n *\n * Generally, an entire application is wrapped in a single `<Provider>` at the root.\n * @class\n * @extends Component\n * @param {Object} props\n * @param {Store} props.store\tA {Store} instance to expose via context.\n */\nexport function Provider(props) {\n\tthis.getChildContext = () => ({ store: props.store });\n}\nProvider.prototype.render = props => props.children && props.children[0] || props.children;\n"],"names":["assign","obj","props","let","i","Provider","getChildContext","store","prototype","render","children","mapStateToProps","actions","properties","split","state","selected","length","Child","Wrapper","context","getState","boundActions","mapped","action","mapActions","update","this","setState","componentWillReceiveProps","p","componentDidMount","subscribe","componentWillUnmount","unsubscribe","h","Component","constructor"],"mappings":"wBAyBO,SAASA,EAAOC,EAAKC,OACtBC,IAAIC,KAAKF,EAAOD,EAAIG,GAAKF,EAAME,UAC7BH,ECoCD,SAASI,EAASH,QACnBI,kCAA2BC,MAAOL,EAAMK,QAE9CF,EAASG,UAAUC,gBAASP,UAASA,EAAMQ,UAAYR,EAAMQ,SAAS,IAAMR,EAAMQ,0BAjD3E,SAAiBC,EAAiBC,GDLlC,IAAgBC,QCMM,mBAAjBF,IDLa,iBADFE,ECOIF,GAAmB,MDNXE,EAAaA,EAAWC,MAAM,YCM/DH,WDLMI,WACFC,EAAW,GACNZ,EAAE,EAAGA,EAAES,EAAWI,OAAQb,IAClCY,EAASH,EAAWT,IAAMW,EAAMF,EAAWT,WAErCY,aCEDE,YACGC,EAAQjB,EAAOkB,cACjBb,EAAQa,EAAQb,MAClBQ,EAAQJ,EAAgBJ,EAAQA,EAAMc,WAAa,GAAInB,GACrDoB,EAAeV,EDxBjB,SAAoBA,EAASL,GACd,mBAAVK,IAAsBA,EAAUA,EAAQL,QAC/CgB,EAAS,OACRpB,IAAIC,KAAKQ,EACbW,EAAOnB,GAAKG,EAAMiB,OAAOZ,EAAQR,WAE3BmB,ECkB0BE,CAAWb,EAASL,GAAS,OAAEA,GAC1DmB,iBACCH,EAASZ,EAAgBJ,EAAQA,EAAMc,WAAa,GAAInB,OACvDC,IAAIC,KAAKmB,EAAQ,GAAIA,EAAOnB,KAAKW,EAAMX,UAC3CW,EAAQQ,EACDI,EAAKC,SAAS,QAEjBzB,IAAIC,KAAKW,EAAO,KAAMX,KAAKmB,UAC/BR,EAAQQ,EACDI,EAAKC,SAAS,UAGlBC,mCAA4BC,GAChC5B,EAAQ4B,EACRJ,UAEIK,6BACJxB,EAAMyB,UAAUN,SAEZO,gCACJ1B,EAAM2B,YAAYR,SAEdjB,gBAASP,UAASiC,IAAEjB,EAAOlB,EAAOA,EAAOA,EAAO,GAAIsB,GAAepB,GAAQa,YAEzEI,EAAQX,UAAY,IAAI4B,aAAaC,YAAclB"}